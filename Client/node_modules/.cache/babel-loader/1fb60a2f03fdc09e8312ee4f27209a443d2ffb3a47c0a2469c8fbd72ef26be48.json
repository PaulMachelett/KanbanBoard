{"ast":null,"code":"var _jsxFileName = \"/Users/paulmachelett/PycharmProjects/react-test/src/API.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/kanbancard/phase/1`);\n        if (!response.ok) {\n          throw new Error(`This is an HTTP error: The status is ${response.status}`);\n        }\n        let actualData = await response.json();\n        setData(actualData);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apiCall\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"A moment please...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `There is a problem fetching the post data - ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data && data.map(({\n        id,\n        title\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","data","setData","useState","loading","setLoading","error","setError","useEffect","getData","response","fetch","ok","Error","status","actualData","json","err","message","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","title","_c","$RefreshReg$"],"sources":["/Users/paulmachelett/PycharmProjects/react-test/src/API.js"],"sourcesContent":["export default function App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/kanbancard/phase/1`\n        );\n        if (!response.ok) {\n          throw new Error(\n            `This is an HTTP error: The status is ${response.status}`\n          );\n        }\n        let actualData = await response.json();\n        setData(actualData);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div className=\"apiCall\">\n      <h1>API Posts</h1>\n      {loading && <div>A moment please...</div>}\n      {error && (\n        <div>{`There is a problem fetching the post data - ${error}`}</div>\n      )}\n      <ul>\n        {data &&\n          data.map(({ id, title }) => (\n            <li key={id}>\n              <h3>{title}</h3>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,eAAe,SAASA,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExCK,SAAS,CAAC,MAAM;IACd,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0CACH,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CACZ,wCAAuCH,QAAQ,CAACI,MAAO,EAC1D,CAAC;QACH;QACA,IAAIC,UAAU,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACtCd,OAAO,CAACa,UAAU,CAAC;QACnBR,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;QACrBhB,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,SAAS;QACRG,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDI,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEU,OAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBF,OAAA;MAAAE,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBrB,OAAO,iBAAIe,OAAA;MAAAE,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACxCnB,KAAK,iBACJa,OAAA;MAAAE,QAAA,EAAO,+CAA8Cf,KAAM;IAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACnE,eACDN,OAAA;MAAAE,QAAA,EACGpB,IAAI,IACHA,IAAI,CAACyB,GAAG,CAAC,CAAC;QAAEC,EAAE;QAAEC;MAAM,CAAC,kBACrBT,OAAA;QAAAE,QAAA,eACEF,OAAA;UAAAE,QAAA,EAAKO;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADTE,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CA9CuBD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}